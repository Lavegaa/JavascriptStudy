/*
  NxM의 크기의 게임 판이 있다.
  1은 바다고 0은 땅이다.
  캐릭터의 위치와 방향이 주어진다.(1, 2, 0) (x좌표, Y좌표, 방향)  방향 - 0: 북쪽 1: 동쪽 2: 남쪽 3: 서쪽
  아래와 같은 규칙으로 이동한다.
  1. 현재 위치에서 현재 방향을 기준으로 왼쪽(반시계방향 90도)부터 차례로 갈 곳을 정한다.
  2. 캐릭터의 바로 왼쪽 방향에 아직 가보지 않은 칸이 존재한다면 왼쪽 방향으로 회전한 다음 왼쪽으로 한 칸을 전진한다. 
     횐쪽 방향에 가보지 않은 칸이 없다면, 왼쪽 방향으로 회전만 수행하고 1단계로 돌아간다.
  3. 만약 네 방향 모두 이미 기본 칸이거나 바다로 되어 있는 칸인 경우에는 바라보는 방향을 유지한채 한칸 뒤로가고 1단계로 돌아간다.
     단 이때 뒤쪽 방향이 바다인 칸이라 뒤로 갈 수 없는 경우에는 움직임을 멈춘다.
  규칙에 따라 방문한 칸 수를 출력하는 프로그램을 만드시오.
*/

const player = [1, 1, 0];

let userDirection = player[2];

const direction = [[0,-1],[-1,0],[0,1],[1,0]];

let gameMap = [[1,1,1,1],[1,0,0,1],[1,1,0,1],[1,1,1,1]];

const game = (player, gameMap) => {
  let dx = player[0];
  let dy = player[1];
  
}

const turnLeft = () => (userDirection+1)%4;

const check = () => {

}

console.log(game(player, gameMap));